FROM php:7.4.11-fpm-alpine3.12

# Install PHP Extensions
RUN apk add --no-cache --update --virtual .phpize-deps $PHPIZE_DEPS

RUN apk add --no-cache --update libmemcached-libs zlib
RUN set -xe && \
    cd /tmp/ && \
    apk add --no-cache --update --virtual .memcached-deps zlib-dev libmemcached-dev cyrus-sasl-dev && \
    # Install igbinary (memcached's deps)
    pecl install igbinary && \
    # Install memcached
    ( \
        pecl install --nobuild memcached && \
        cd "$(pecl config-get temp_dir)/memcached" && \
        phpize && \
        ./configure --enable-memcached-igbinary && \
        make -j$(nproc) && \
        make install && \
        cd /tmp/ \
    ) && \
    # Enable PHP extensions
    docker-php-ext-enable igbinary memcached && \
    apk del .memcached-deps

RUN docker-php-ext-install -j$(nproc) pdo_mysql

RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('sha384', 'composer-setup.php') === '795f976fe0ebd8b75f26a6dd68f78fd3453ce79f32ecb33e7fd087d39bfeb978342fb73ac986cd4f54edd0dc902601dc') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"  && \
    php composer-setup.php --install-dir=/bin --filename=composer && \
    php -r "unlink('composer-setup.php');" && \
    composer global require hirak/prestissimo

RUN apk add --no-cache --update icu-dev
RUN docker-php-ext-install -j$(nproc) intl ctype iconv
RUN docker-php-ext-install -j$(nproc) mysqli && \
    docker-php-ext-enable mysqli

# Install ext-http + ext-curl
RUN apk add --no-cache --update libcurl libevent libidn
RUN set -xe && \
    apk add --no-cache --update --virtual .http-deps curl-dev libevent-dev libidn-dev && \
    pecl install raphf propro && \
    docker-php-ext-enable raphf propro && \
    pecl install pecl_http && \
    # Enable http + raphf + propro
    echo -e "extension=raphf.so\nextension=propro.so\nextension=http.so" > /usr/local/etc/php/conf.d/docker-php-ext-http.ini && \
    rm -rf /usr/local/etc/php/conf.d/docker-php-ext-raphf.ini && \
    rm -rf /usr/local/etc/php/conf.d/docker-php-ext-propro.ini && \
    docker-php-ext-install -j$(nproc) curl && \
    apk del .http-deps

RUN docker-php-ext-install opcache

RUN apk add --no-cache --update git

# tideways profiler installation
RUN git clone https://github.com/tideways/php-profiler-extension.git /tmp/xhprof
WORKDIR /tmp/xhprof
RUN phpize && ./configure && make && make install && \
    echo "extension=tideways_xhprof.so" >> /usr/local/etc/php/conf.d/20-xhprof.ini && \
    echo "xhprof.output_dir='/tmp/xhprof'" >> /usr/local/etc/php/conf.d/20-xhprof.ini

RUN rm -rf /tmp/*
RUN apk del .phpize-deps

COPY php.ini-prod "$PHP_INI_DIR/php.ini"